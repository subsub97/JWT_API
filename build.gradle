plugins {
    id 'java'
    id 'org.springframework.boot' version '2.7.5'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '11'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly("com.h2database:h2")

    implementation 'mysql:mysql-connector-java:8.0.33'
    runtimeOnly 'mysql:mysql-connector-java:8.0.33'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'

    testCompileOnly  'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'

    implementation 'org.modelmapper:modelmapper:3.1.0'

    implementation 'io.springfox:springfox-boot-starter:3.0.0'
    implementation 'io.springfox:springfox-swagger-ui:3.0.0'
    // HttpServletRequest로 처리하려면 JSON 처리를 쉽게 할 수 있는 라이브러리
    implementation 'com.google.code.gson:gson:2.8.9'

    //jwt
    implementation 'io.jsonwebtoken:jjwt:0.9.1'

    // OAuth2를 사용하기 위한 스타터 추가
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'

}

tasks.named('test') {
    useJUnitPlatform()
}
